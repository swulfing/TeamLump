# testing <- Lumpfish_Data_clean %>%
#   filter(DATA_SOURCE == "NEFSC") %>%
#   #drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
#   filter(is.na(YEAR))
#
#
# View(testing)
#
#
# min(testing$YEAR)
temptest <- Lumpfish_Data_clean %>%
group_by(DATA_SOURCE) %>%
summarize(mean(TEMP_BOTTOM))
View(temptest)
# testing <- Lumpfish_Data_clean %>%
#   filter(DATA_SOURCE == "NEFSC") %>%
#   #drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
#   filter(is.na(YEAR))
#
#
# View(testing)
#
#
# min(testing$YEAR)
temptest <- Lumpfish_Data_clean %>%
group_by(DATA_SOURCE) %>%
summarize(mean(TEMP_BOTTOM), na.rm = TRUE)
View(temptest)
# testing <- Lumpfish_Data_clean %>%
#   filter(DATA_SOURCE == "NEFSC") %>%
#   #drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
#   filter(is.na(YEAR))
#
#
# View(testing)
#
#
# min(testing$YEAR)
temptest <- Lumpfish_Data_clean %>%
group_by(DATA_SOURCE) %>%
summarize(mean(TEMP_BOTTOM, na.rm = TRUE))
View(temptest)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, cache = TRUE, dev = c('pdf','png'), dpi=300)
library(tidyverse)
library(sf)
library(mapview)
library(lubridate)
library(gganimate)
library(gifski)
library(maps)
library(knitr)
library(ggpubr)
library(magick)
library(ggplot2)
library(dplyr)
library(hexbin)
theme_qmel <- function(){
theme_classic() + theme(panel.border = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),axis.text=element_text(size=8),
axis.title=element_text(size=14))
}
#setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
Lumpfish_Data_occurrences <- read.csv("DatatoClean/Lumpfish_Data_occurrences.csv")
Lumpfish_Data_occurrences$YEAR <- year(Lumpfish_Data_occurrences$DATE)
Lumpfish_Data_map <- Lumpfish_Data_clean %>%
drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
mutate(across(SEASON, factor, levels = c("WINTER", "SPRING", "SUMMER", "FALL")))
which_state <- c("maine", "new hampshire", "vermont", "massachusetts", "rhode island", "connecticut",
"new york", "new jersey", "pennsylvania", "virginia", "maryland", "washington dc", "delaware")
county_info <- map_data("state", region=which_state)
base_map <- ggplot(data = county_info, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
coord_quickmap() +
theme_void()
min_long <- min(Lumpfish_Data_map$LON)
max_long <- -66 #max(Lumpfish_Data_map$LON)
min_lat <- 41.5 #min(Lumpfish_Data_map$LAT)
max_lat <- max(Lumpfish_Data_map$LAT)
zoom_map <- base_map +
coord_quickmap(xlim = c(min_long, max_long),  ylim = c(min_lat, max_lat))
# testing <- Lumpfish_Data_clean %>%
#   filter(DATA_SOURCE == "NEFSC") %>%
#   #drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
#   filter(is.na(YEAR))
#
#
# View(testing)
#
#
# min(testing$YEAR)
# temptest <- Lumpfish_Data_clean %>%
#   group_by(DATA_SOURCE) %>%
#   summarize(mean(TEMP_BOTTOM, na.rm = TRUE))
#
# View(temptest)
min(Lumpfish_Data_clean$TEMP_BOTTOM)
class(Lumpfish_Data_clean$TEMP_BOTTOM)
max(Lumpfish_Data_clean$TEMP_BOTTOM)
#setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
max(Lumpfish_Data_clean$TEMP_BOTTOM)
max(Lumpfish_Data_clean$YEAR)
head(Lumpfish_Data_clean)
class(Lumpfish_Data_clean$TEMP_BOTTOM)
min(Lumpfish_Data_clean$TEMP_BOTTOM)
max(Lumpfish_Data_clean$TEMP_BOTTOM)
plot(Lumpfish_Data_clean$TEMP_BOTTOM)
temptest <- Lumpfish_Data_clean %>%
drop_na(c("TEMP_BOTTOM"))
min(temptest$TEMP_BOTTOM)
max(temptest$TEMP_BOTTOM)
head(zoom_map)
head(Lumpfish_Data_map)
depth_graph <- Lumpfish_Data_map %>%
filter(!is.na(DEPTH))
depthMap_zoom <- zoom_map +
geom_point(data = depth_graph, aes(x = LON, y = LAT, group=DEPTH, colour = DEPTH)) +
scale_colour_continuous(name = "Depth (m)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
depthMap_zoom
depth_graph <- Lumpfish_Data_map %>%
filter(!is.na(DEPTH))
depthMap_zoom <- zoom_map +
geom_point(data = depth_graph, aes(x = LON, y = LAT, group=DEPTH, colour = DEPTH)) +
scale_colour_continuous(name = "Depth (m)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
depthMap_zoom
min(depth_graph$DEPTH)
max(depth_graph$DEPTH)
temp_graph <- Lumpfish_Data_map %>%
filter(!is.na(TEMP_BOTTOM))
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
scale_colour_continuous(name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
plot(depth_graph$TEMP_BOTTOM~depth_graph$DEPTH)
library(tidyverse)
library(sf)
library(mapview)
install.packages("mapview")
library(mapview)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
devtools::install('/tmp/htmltools')
devtools::install_github('rstudio/htmltools')
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(sf)
library(mapview)
library(lubridate)
library(gganimate)
library(gifski)
library(maps)
library(knitr)
library(ggpubr)
library(magick)
library(ggplot2)
library(dplyr)
setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
Lumpfish_Data_map <- Lumpfish_Data_clean %>%
drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
mutate(across(SEASON, factor, levels = c("WINTER", "SPRING", "SUMMER", "FALL")))
which_state <- c("maine", "new hampshire", "vermont", "massachusetts", "rhode island", "connecticut",
"new york", "new jersey", "pennsylvania", "virginia", "maryland", "washington dc", "delaware")
county_info <- map_data("state", region=which_state)
base_map <- ggplot(data = county_info, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
coord_quickmap() +
theme_void()
min_long <- min(Lumpfish_Data_map$LON)
max_long <- max(Lumpfish_Data_map$LON)
min_lat <- 41.5 #min(Lumpfish_Data_map$LAT)
max_lat <- max(Lumpfish_Data_map$LAT)
zoom_map <- base_map +
coord_quickmap(xlim = c(min_long, max_long),  ylim = c(min_lat, max_lat))
# testing <- Lumpfish_Data_clean %>%
#   filter(DATA_SOURCE == "NEFSC") %>%
#   #drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
#   filter(is.na(YEAR))
#
#
# View(testing)
#
#
# min(testing$YEAR)
nrow(Lumpfish_Data_clean)
nrow(Lumpfish_Data_map)
test <- Lumpfish_Data_clean %>%
filter(YEAR <= 2021)
nrow(test)
1357 + 104 + 120 + 649 + 9912
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, cache = FALSE, dev = c('pdf','png'), dpi=300)
library(tidyverse)
library(sf)
#library(mapview)
library(lubridate)
library(gganimate)
library(gifski)
library(maps)
library(knitr)
library(ggpubr)
library(magick)
library(ggplot2)
library(dplyr)
library(hexbin)
library(RColorBrewer)
theme_qmel <- function(){
theme_classic() + theme(panel.border = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),axis.text=element_text(size=8),
axis.title=element_text(size=14))
}
#setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
# Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
Lumpfish_Data_clean <- Lumpfish_Data_clean %>%
filter(YEAR <= 2021) # Just using 2021 Data
# Lumpfish_Data_occurrences <- read.csv("DatatoClean/Lumpfish_Data_occurrences.csv")
# Lumpfish_Data_occurrences$YEAR <- year(Lumpfish_Data_occurrences$DATE)
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
Lumpfish_Data_occurrences <- Lumpfish_Data_occurrences %>%
filter(YEAR <= 2021)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, cache = FALSE, dev = c('pdf','png'), dpi=300)
library(tidyverse)
library(sf)
#library(mapview)
library(lubridate)
library(gganimate)
library(gifski)
library(maps)
library(knitr)
library(ggpubr)
library(magick)
library(ggplot2)
library(dplyr)
library(hexbin)
library(RColorBrewer)
theme_qmel <- function(){
theme_classic() + theme(panel.border = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),axis.text=element_text(size=8),
axis.title=element_text(size=14))
}
#setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
# Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
Lumpfish_Data_clean <- Lumpfish_Data_clean %>%
filter(YEAR <= 2021) # Just using 2021 Data
# Lumpfish_Data_occurrences <- read.csv("DatatoClean/Lumpfish_Data_occurrences.csv")
# Lumpfish_Data_occurrences$YEAR <- year(Lumpfish_Data_occurrences$DATE)
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
Lumpfish_Data_occurrences <- Lumpfish_Data_occurrences %>%
filter(YEAR <= 2021)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, cache = FALSE, dev = c('pdf','png'), dpi=300)
library(tidyverse)
library(sf)
#library(mapview)
library(lubridate)
library(gganimate)
library(gifski)
library(maps)
library(knitr)
library(ggpubr)
library(magick)
library(ggplot2)
library(dplyr)
library(hexbin)
library(RColorBrewer)
theme_qmel <- function(){
theme_classic() + theme(panel.border = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),axis.text=element_text(size=8),
axis.title=element_text(size=14))
}
#setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
# Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
Lumpfish_Data_clean <- Lumpfish_Data_clean %>%
filter(YEAR <= 2021) # Just using 2021 Data
# Lumpfish_Data_occurrences <- read.csv("DatatoClean/Lumpfish_Data_occurrences.csv")
# Lumpfish_Data_occurrences$YEAR <- year(Lumpfish_Data_occurrences$DATE)
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
#Lumpfish_Data_occurrences <- Lumpfish_Data_occurrences %>%
filter(YEAR <= 2021)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE, cache = FALSE, dev = c('pdf','png'), dpi=300)
library(tidyverse)
library(sf)
#library(mapview)
library(lubridate)
library(gganimate)
library(gifski)
library(maps)
library(knitr)
library(ggpubr)
library(magick)
library(ggplot2)
library(dplyr)
library(hexbin)
library(RColorBrewer)
theme_qmel <- function(){
theme_classic() + theme(panel.border = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),axis.text=element_text(size=8),
axis.title=element_text(size=14))
}
#setwd("C:/Users/sophi/Documents/GitHub/TeamLump")
Lumpfish_Data_clean <- read.csv("DatatoClean/Lumpfish_Data_clean.csv")
# Lumpfish_Data_clean$YEAR <- year(Lumpfish_Data_clean$DATE)
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_clean$DATA_SOURCE[ Lumpfish_Data_clean$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
Lumpfish_Data_clean <- Lumpfish_Data_clean %>%
filter(YEAR <= 2021) # Just using 2021 Data
# Lumpfish_Data_occurrences <- read.csv("DatatoClean/Lumpfish_Data_occurrences.csv")
# Lumpfish_Data_occurrences$YEAR <- year(Lumpfish_Data_occurrences$DATE)
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NEFSC" ] <- "NEFSC_BT"
# Lumpfish_Data_occurrences$DATA_SOURCE[ Lumpfish_Data_occurrences$DATA_SOURCE == "NOAA_Observer" ] <- "NEFSC_Observer"
# Lumpfish_Data_occurrences <- Lumpfish_Data_occurrences %>%
#   filter(YEAR <= 2021)
Lumpfish_Data_map <- Lumpfish_Data_clean %>%
drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
mutate(across(SEASON, factor, levels = c("WINTER", "SPRING", "SUMMER", "FALL")))
which_state <- c("maine", "new hampshire", "vermont", "massachusetts", "rhode island", "connecticut",
"new york", "new jersey", "pennsylvania", "virginia", "maryland", "washington dc", "delaware")
county_info <- map_data("state", region=which_state)
base_map <- ggplot(data = county_info, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
coord_quickmap() +
theme_void()
min_long <- min(Lumpfish_Data_map$LON)
max_long <- -66 #max(Lumpfish_Data_map$LON)
min_lat <- 41.5 #min(Lumpfish_Data_map$LAT)
max_lat <- max(Lumpfish_Data_map$LAT)
zoom_map <- base_map +
coord_quickmap(xlim = c(min_long, max_long),  ylim = c(min_lat, max_lat))
# testing <- Lumpfish_Data_clean %>%
#   filter(DATA_SOURCE == "NEFSC") %>%
#   #drop_na(c("LAT", "LON", "DATE", "YEAR")) %>%
#   filter(is.na(YEAR))
#
#
# View(testing)
#
#
# min(testing$YEAR)
# temptest <- Lumpfish_Data_clean %>%
#   group_by(DATA_SOURCE) %>%
#   summarize(mean(TEMP_BOTTOM, na.rm = TRUE))
#
# View(temptest)
temp_graph <- Lumpfish_Data_map %>%
filter(!is.na(TEMP_BOTTOM))
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
scale_colour_continuous(name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
temp_graph <- Lumpfish_Data_map %>%
filter(!is.na(TEMP_BOTTOM))
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
scale_fill_gradient2(
low = "blue",
high = "red")+
scale_colour_continuous(name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
scale_color_gradient2(
low = "blue",
high = "red")+
scale_colour_continuous(name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_continuous(low = "blue", high = "red", name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_continuous(low = "blue", high = "red", midpoint = 10, name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_continuous(low = "blue", mid = "purple", high = "red", midpoint = 10, name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_continuous2(low = "blue", mid = "purple", high = "red", midpoint = 10, name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_continuous(low = "blue", high = "red", name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_gradient2(low = "blue", mid = "purple", high = "red", midpoint = 10,  name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_gradient2(low = "blue", high = "red", midpoint = 10,  name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_gradient2(low = "blue", high = "red",  name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_gradient2(low = "blue", high = "red", space = "Lab", name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_gradient2(low = "blue", high = "red", midpoint = 10,  space = "Lab", name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
# scale_color_gradient2(
# low = "blue",
# high = "red") +
scale_colour_gradient2(low = "blue", mid = "purple", high = "red", midpoint = 10,  space = "Lab", name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
tempMap_zoom <- zoom_map +
geom_point(data = temp_graph, aes(x = LON, y = LAT, group=TEMP_BOTTOM, colour = TEMP_BOTTOM)) +
scale_colour_continuous(low = "blue", high = "red",  space = "Lab", name = "Bottom Temperature (c)") +
# scale_colour_gradient2(low = "blue", mid = "purple", high = "red", midpoint = 10,  space = "Lab", name = "Bottom Temperature (c)") +
xlab("Longitude") +
ylab("Latitude") +
theme_qmel()
tempMap_zoom
